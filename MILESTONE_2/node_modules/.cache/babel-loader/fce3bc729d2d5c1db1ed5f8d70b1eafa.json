{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport DiskComponent from \"@/components/DiskComponent.vue\";\nimport state from \"@/state.js\";\nexport default {\n  name: \"DisksList\",\n  computed: {\n    filtered: function filtered() {\n      // Verifichiamo se state.searchText non é vuoto e se si filtriamo l'array facendone una copia con filter e restituendola\n      if (state.searchText) {\n        // applicando filter all'array stiamo generando una nuova array\n        return this.list.filter(function (item) {\n          // ora usiamo state.searchText per filtrare i dati\n          return item.author.toLowerCase().includes(state.searchText.toLowerCase());\n        });\n      }\n      /* Se lo state.searchText é vuoto restituiamo l'array originale */\n      else {\n        return this.list;\n      }\n    }\n  },\n  components: {\n    DiskComponent: DiskComponent\n  },\n  data: function data() {\n    return {\n      API_URL: \"http://localhost/PHP/php-ajax-dischi/MILESTONE_1/db.php\",\n      item: null,\n      loading: true,\n      error: null,\n      list: null\n    };\n  },\n  methods: {\n    callApi: function callApi() {\n      var _this = this;\n\n      axios.get(this.API_URL).then(function (response) {\n        _this.list = response.data.response;\n        _this.loading = false;\n      }).catch(function (error) {\n        console.error();\n        error;\n        _this.error = \"Sorry There is a problem! \".concat(error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.callApi();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AAEA;EACAA,iBADA;EAEAC;IACAC,QADA,sBACA;MACA;MACA;QACA;QACA;UACA;UACA;QAEA,CAJA;MAMA;MACA;MATA,KAUA;QACA;MACA;IACA;EAhBA,CAFA;EAoBAC;IACAC;EADA,CApBA;EAuBAC,IAvBA,kBAuBA;IACA;MACAC,kEADA;MAEAC,UAFA;MAGAC,aAHA;MAIAC,WAJA;MAKAC;IALA;EAQA,CAhCA;EAiCAC;IACAC,OADA,qBACA;MAAA;;MACAC,MACAC,GADA,CACA,YADA,EAEAC,IAFA,CAEA;QACA;QACA;MACA,CALA,EAMAC,KANA,CAMA;QACAC;QACAR;QACA;MACA,CAVA;IAWA;EAbA,CAjCA;EAiDAS,OAjDA,qBAiDA;IACA;EACA;AAnDA","names":["name","computed","filtered","components","DiskComponent","data","API_URL","item","loading","error","list","methods","callApi","axios","get","then","catch","console","mounted"],"sourceRoot":"src/components","sources":["DisksList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n     <section v-if=\"!loading\">\r\n      <div class=\"container\">\r\n        <div class=\"row row-cols-5\">\r\n            <div class=\"col g-1\" v-for=\"(item, index) in filtered\" :key=\"index\" >\r\n            <DiskComponent \r\n                :poster=\"item.poster\"\r\n                :title=\"item.title\"\r\n                :author=\"item.author\"\r\n                :year=\"item.year\"\r\n                :genre=\"item.genre\"\r\n            />\r\n            </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </section>\r\n    <div\r\n      class=\"d-flex min-vh-100 align-items-center justify-content-center\"\r\n      v-else\r\n    >\r\n      <h1>loading ...</h1>\r\n    \r\n    </div>\r\n  </div>\r\n\r\n    \r\n  \r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport DiskComponent from \"@/components/DiskComponent.vue\";\r\nimport state from \"@/state.js\";\r\n\r\nexport default {\r\n  name: \"DisksList\",\r\n  computed: {\r\n    filtered(){\r\n    // Verifichiamo se state.searchText non é vuoto e se si filtriamo l'array facendone una copia con filter e restituendola\r\n      if(state.searchText) {\r\n        // applicando filter all'array stiamo generando una nuova array\r\n        return this.list.filter(item => {\r\n            // ora usiamo state.searchText per filtrare i dati\r\n          return item.author.toLowerCase().includes(state.searchText.toLowerCase()\r\n          )\r\n        })\r\n        \r\n      } \r\n      /* Se lo state.searchText é vuoto restituiamo l'array originale */\r\n      else {\r\n        return this.list\r\n      }\r\n    }\r\n  },  \r\n  components: {\r\n    DiskComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      API_URL: \"http://localhost/PHP/php-ajax-dischi/MILESTONE_1/db.php\",\r\n      item: null,\r\n      loading: true,\r\n      error:null,\r\n      list: null\r\n      \r\n    };\r\n  },\r\n  methods: {\r\n    callApi() {\r\n      axios\r\n        .get(this.API_URL)\r\n        .then((response) => {\r\n          this.list = response.data.response;\r\n          this.loading = false;\r\n        })\r\n        .catch((error) => {\r\n          console.error();\r\n          error;\r\n          this.error = `Sorry There is a problem! ${error}`;\r\n        });\r\n    },\r\n    \r\n  },\r\n  mounted() {\r\n    this.callApi();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n@import '@/assets/scss/variables.scss';\r\n\r\n.container-fluid{\r\n    background-color: $main-bg ;\r\n    height: calc(100vh - 60px);\r\n    .container{\r\n        padding-top: 2rem;\r\n    }\r\n}\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}